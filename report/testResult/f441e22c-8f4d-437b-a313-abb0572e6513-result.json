{"name": "test_register", "status": "broken", "statusDetails": {"message": "requests.exceptions.MissingSchema: Invalid URL '<requests.sessions.Session object at 0x000001F5E2B9CE10>': No schema supplied. Perhaps you meant http://<requests.sessions.Session object at 0x000001F5E2B9CE10>?", "trace": "self = <scripts.test_register.TestRegister object at 0x000001F5E2B75908>\n\n    def test_register(self):\n        # 实例化faker这个类\n        fake = Faker()\n    \n        # 对data数据进行构造\n        username = fake.first_name()\n        print(f'fake构造的用户名:{username}')\n        password = fake.password()\n        print(f'fake构造的密码:{password}')\n        data = {\n            'accounts': username,\n            'pwd': password,\n            'type': 'username',\n            'is_agree_agreement': 1,\n        }\n>       res = requests.post(self.session, data=data)\n\nscripts\\test_register.py:32: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nd:\\learn\\tools\\python36\\lib\\site-packages\\requests\\api.py:119: in post\n    return request('post', url, data=data, json=json, **kwargs)\nd:\\learn\\tools\\python36\\lib\\site-packages\\requests\\api.py:61: in request\n    return session.request(method=method, url=url, **kwargs)\nd:\\learn\\tools\\python36\\lib\\site-packages\\requests\\sessions.py:516: in request\n    prep = self.prepare_request(req)\nd:\\learn\\tools\\python36\\lib\\site-packages\\requests\\sessions.py:459: in prepare_request\n    hooks=merge_hooks(request.hooks, self.hooks),\nd:\\learn\\tools\\python36\\lib\\site-packages\\requests\\models.py:314: in prepare\n    self.prepare_url(url, params)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <PreparedRequest [POST]>, url = '<requests.sessions.Session object at 0x000001F5E2B9CE10>', params = OrderedDict()\n\n    def prepare_url(self, url, params):\n        \"\"\"Prepares the given HTTP URL.\"\"\"\n        #: Accept objects that have string representations.\n        #: We're unable to blindly call unicode/str functions\n        #: as this will include the bytestring indicator (b'')\n        #: on python 3.x.\n        #: https://github.com/psf/requests/pull/2238\n        if isinstance(url, bytes):\n            url = url.decode('utf8')\n        else:\n            url = unicode(url) if is_py2 else str(url)\n    \n        # Remove leading whitespaces from url\n        url = url.lstrip()\n    \n        # Don't do any URL preparation for non-HTTP schemes like `mailto`,\n        # `data` etc to work around exceptions from `url_parse`, which\n        # handles RFC 3986 only.\n        if ':' in url and not url.lower().startswith('http'):\n            self.url = url\n            return\n    \n        # Support for unicode domain names and paths.\n        try:\n            scheme, auth, host, port, path, query, fragment = parse_url(url)\n        except LocationParseError as e:\n            raise InvalidURL(*e.args)\n    \n        if not scheme:\n            error = (\"Invalid URL {0!r}: No schema supplied. Perhaps you meant http://{0}?\")\n            error = error.format(to_native_string(url, 'utf8'))\n    \n>           raise MissingSchema(error)\nE           requests.exceptions.MissingSchema: Invalid URL '<requests.sessions.Session object at 0x000001F5E2B9CE10>': No schema supplied. Perhaps you meant http://<requests.sessions.Session object at 0x000001F5E2B9CE10>?\n\nd:\\learn\\tools\\python36\\lib\\site-packages\\requests\\models.py:388: MissingSchema"}, "start": 1607272474784, "stop": 1607272474823, "uuid": "7aa00b54-5d8d-4130-b046-09324ff6f8e2", "historyId": "380425726cd591d8dccd77256a99a1ea", "testCaseId": "cfb7a3e27e372e5116157cea226aba3c", "fullName": "scripts.test_register.TestRegister#test_register", "labels": [{"name": "parentSuite", "value": "scripts"}, {"name": "suite", "value": "test_register"}, {"name": "subSuite", "value": "TestRegister"}, {"name": "host", "value": "DESKTOP-D9JUS9D"}, {"name": "thread", "value": "27432-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "scripts.test_register"}]}